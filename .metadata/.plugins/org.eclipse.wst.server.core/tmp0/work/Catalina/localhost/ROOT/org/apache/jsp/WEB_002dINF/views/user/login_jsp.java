/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2022-12-13 14:52:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("	<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width\" />\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"//developers.kakao.com/sdk/js/kakao.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<style>\r\n");
      out.write("	main {\r\n");
      out.write("		margin-top: 5rem;\r\n");
      out.write("	}\r\n");
      out.write("	h3 {\r\n");
      out.write("		padding-bottom: 12px;\r\n");
      out.write("		font-size: 30px;\r\n");
      out.write("	}\r\n");
      out.write("	.form-wrapper {\r\n");
      out.write("      	text-align: center;\r\n");
      out.write("      	margin: 200px auto; \r\n");
      out.write("	}\r\n");
      out.write("	#loginForm {\r\n");
      out.write("		width: 460px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		margin: 50px auto;\r\n");
      out.write("	}\r\n");
      out.write("	#loginForm input {\r\n");
      out.write("		width: 300px;\r\n");
      out.write("		height:40px;\r\n");
      out.write("		\r\n");
      out.write("	}	\r\n");
      out.write("	input::placeholder {\r\n");
      out.write("  		font-size: 15px;\r\n");
      out.write("  		font-style: italic;\r\n");
      out.write("	}	\r\n");
      out.write("	#btnLogin {\r\n");
      out.write("		width: 310px;\r\n");
      out.write("		height: 43px;\r\n");
      out.write("		background-color:black;\r\n");
      out.write("		color:white;\r\n");
      out.write("		font-size: 15px;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("	}\r\n");
      out.write("	.entire-wrap {\r\n");
      out.write("   		justify-content: end;\r\n");
      out.write("   	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"entire-wrap\" style=\"justify-content: end;\">\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }/header.jsp", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("	<div class=\"form-wrapper\">\r\n");
      out.write("		<form id=\"loginForm\">\r\n");
      out.write("			<h3>AC LEARN</h3>\r\n");
      out.write("			<div class=\"input-wrapper\" style=\"display:block; margin:20px auto;\">\r\n");
      out.write("				<input type=\"text\" id=\"userId\" name=\"userId\" placeholder=\" ID\" required>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"input-wrapper\" style=\"display:block; margin:20px auto;\">\r\n");
      out.write("				<input type=\"password\" id=\"userPw\" name=\"userPw\" placeholder=\" Password\" required>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div style=\"display:block; margin:20px auto;\">\r\n");
      out.write("				<button type=\"button\" id=\"btnLogin\">LOGIN</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("			<div class=\"login_append\">\r\n");
      out.write("	        <span class=\"txt_find\">\r\n");
      out.write("	           <a href=\"/user/searchId.do\" class=\"link_find\">아이디 찾기</a>\r\n");
      out.write("	            |\r\n");
      out.write("	           <a href=\"/user/searchPw.do\" class=\"link_find\">비밀번호 찾기</a>\r\n");
      out.write("	            |\r\n");
      out.write("	           <a href=\"/user/join.do\" class=\"link_find\">회원가입</a>\r\n");
      out.write("	         </span>\r\n");
      out.write("	         \r\n");
      out.write("	       </div>\r\n");
      out.write("				\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	</main>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }/footer.jsp", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("	<script>\r\n");
      out.write("      $(function() {\r\n");
      out.write("         //회원가입 성공 시 메시지 출력\r\n");
      out.write("         if($(\"#joinMsg\").val() != \"\" && $(\"#joinMsg\").val() != null) {\r\n");
      out.write("            alert($(\"#joinMsg\").val());\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         //로그인 시 아이디나 비밀번호가 틀렸을 경우에 대비하여 폼 서브밋 대신 ajax로 처리\r\n");
      out.write("         $(\"#btnLogin\").on(\"click\", function() {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("               url: \"/user/login.do\",\r\n");
      out.write("               type: \"post\",\r\n");
      out.write("               data: $(\"#loginForm\").serialize(),\r\n");
      out.write("               success: function(obj) {\r\n");
      out.write("                  console.log(obj);\r\n");
      out.write("                  if(obj ==\"idFail\") {\r\n");
      out.write("                     alert(\"존재하지 않는 아이디입니다.\");\r\n");
      out.write("                     $(\"#userId\").focus();\r\n");
      out.write("                     return;\r\n");
      out.write("                  }\r\n");
      out.write("                  \r\n");
      out.write("                  if(obj == \"pwFail\") {\r\n");
      out.write("                     alert(\"비밀번호가 틀렸습니다. 비밀번호를 확인해주세요\");\r\n");
      out.write("                     $(\"#userPw\").focus();\r\n");
      out.write("                     return;\r\n");
      out.write("                  }\r\n");
      out.write("                  // 로그인 성공시 홈화면으로 처리\r\n");
      out.write("                  location.href=\"/index.jsp\";\r\n");
      out.write("               },\r\n");
      out.write("               error: function(e) {\r\n");
      out.write("                  console.log(e);\r\n");
      out.write("               }\r\n");
      out.write("            });\r\n");
      out.write("         });\r\n");
      out.write("      });\r\n");
      out.write("   </script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
